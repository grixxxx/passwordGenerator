{"mappings":"AAAA,MAAMA,YAAcC,SAASC,cAAc,gBACrCC,UAAYF,SAASC,cAAc,cACnCE,WAAaH,SAASI,eAAe,cACrCC,gBAAkBL,SAASC,cAAc,oBAE/CC,UAAUI,MAAQ,GAElBD,gBAAgBE,YAAc,GAAGJ,WAAWG,mBAE5CH,WAAWK,QAAU,WACnBH,gBAAgBE,YAAc,GAAGE,KAAKH,kBACxC,EAEA,IAAII,YAAcC,MAAMC,KAAK,8BACzBC,YAAcF,MAAMC,KAAK,8BACzBE,WAAaH,MAAMC,KAAK,uBACxBG,QAAUJ,MAAMC,KAAK,cAEzB,MAAMI,YAAchB,SAASC,cAAc,gBACrCgB,YAAcjB,SAASC,cAAc,gBACrCiB,kBAAoBlB,SAASC,cAAc,sBAC3CkB,oBAAsBnB,SAASC,cAAc,wBAE7CmB,WAAapB,SAASC,cAAc,eAE1C,SAASoB,mBACPD,WAAWE,MAAMC,QAAU,YAC7B,CAEAxB,YAAYyB,iBAAiB,SAAS,KACpCtB,UAAUI,MAAQ,GAElB,MAAMmB,EAAgB,IAChBN,oBAAoBO,QAAUhB,YAAc,MAC5CQ,kBAAkBQ,QAAUb,YAAc,MAC1CI,YAAYS,QAAUZ,WAAa,MACnCE,YAAYU,QAAUX,QAAU,IAGtC,GACO,IADCU,EAAcE,OAElBP,WAAWb,YAAc,0CACzBa,WAAWE,MAAMC,QAAU,mCAC3BK,WAAWP,iBAAkB,KAC7BnB,UAAUI,MAAQ,QAGlB,IAAK,IAAIuB,EAAI,EAAGA,EAAI1B,WAAWG,MAAOuB,IAAK,CACzC,MAAMC,EAAoB,IAAIC,YAAY,GAC1CC,KAAKC,OAAOC,gBAAgBJ,GAC5B,MAAMK,EAAUC,WAAW,KAAON,EAAkB,GAAGO,YACvDC,QAAQC,IAAIJ,GACZ,MAAMK,EAAeC,KAAKC,MAAMP,EAAUV,EAAcE,QACxDW,QAAQC,IAAIC,GACZtC,UAAUI,OAASmB,EAAce,EACnC,CAEJ,IAGF,MAAMG,QAAU3C,SAASC,cAAc,YAEvC0C,QAAQnB,iBAAiB,SAASoB,UAOhC,GANAxB,WAAWE,MAAMC,QAAU,mCAE3BK,WAAWP,iBAAkB,KAE7BwB,UAAUC,UAAUC,UAAU7C,UAAUI,OAGjC,KADCJ,UAAUI,MAEdc,WAAWb,YAAc,oCACzBa,WAAWE,MAAM0B,gBAAkB,WAGnC5B,WAAWb,YAAc,uBACzBa,WAAWE,MAAM0B,gBAAkB,SAEvC","sources":["src/js/index.js"],"sourcesContent":["const btnGenerate = document.querySelector(\"#generateBtn\");\r\nconst textInput = document.querySelector(\".inputText\");\r\nconst passLength = document.getElementById(\"passLength\");\r\nconst passLengthValue = document.querySelector(\".passLengthValue\");\r\n\r\ntextInput.value = \"\";\r\n\r\npassLengthValue.textContent = `${passLength.value} characters`;\r\n\r\npassLength.oninput = function () {\r\n  passLengthValue.textContent = `${this.value} characters`;\r\n};\r\n\r\nlet upperLetter = Array.from(\"QWERTYUIOPASDFGHJKLZXCVBNM\");\r\nlet lowerLetter = Array.from(\"qwertyuiopasdfghjklzxcvbnm\");\r\nlet symbolChar = Array.from(\"!@#$%^&()_+=-{}][<>\");\r\nlet numChar = Array.from(\"1234567890\");\r\n\r\nconst checkboxNum = document.querySelector(\"#checkboxNum\");\r\nconst checkboxSym = document.querySelector(\"#checkboxSym\");\r\nconst checkboxLowLetter = document.querySelector(\"#checkboxLowLetter\");\r\nconst checkboxUpperLetter = document.querySelector(\"#checkboxUpperLetter\");\r\n\r\nconst copyActive = document.querySelector(\".copyActive\");\r\n\r\nfunction removeCopyActive() {\r\n  copyActive.style.cssText = \"top: -3rem\";\r\n}\r\n\r\nbtnGenerate.addEventListener(\"click\", () => {\r\n  textInput.value = \"\";\r\n\r\n  const availableChar = [\r\n    ...(checkboxUpperLetter.checked ? upperLetter : []),\r\n    ...(checkboxLowLetter.checked ? lowerLetter : []),\r\n    ...(checkboxSym.checked ? symbolChar : []),\r\n    ...(checkboxNum.checked ? numChar : []),\r\n  ];\r\n\r\n  switch (availableChar.length) {\r\n    case 0:\r\n      copyActive.textContent = \"Error ! Please include some characters.\";\r\n      copyActive.style.cssText = \"top: 2rem; background-color: red\";\r\n      setTimeout(removeCopyActive, 2000);\r\n      textInput.value = \"\";\r\n      break;\r\n    default:\r\n      for (let i = 0; i < passLength.value; i++) {\r\n        const generatePassArray = new Uint32Array(1); // Math.floor(Math.random() * availableChar.length);\r\n        self.crypto.getRandomValues(generatePassArray);\r\n        const decimal = parseFloat(\"0.\" + generatePassArray[0].toString()); // The filthiest decimalizer in existance\r\n        console.log(decimal);\r\n        const generatePass = Math.floor(decimal * availableChar.length);\r\n        console.log(generatePass);\r\n        textInput.value += availableChar[generatePass];\r\n      }\r\n      break;\r\n  }\r\n});\r\n\r\nconst copyBtn = document.querySelector(\".copyBtn\");\r\n\r\ncopyBtn.addEventListener(\"click\", async () => {\r\n  copyActive.style.cssText = \"background-color: red; top: 2rem\";\r\n\r\n  setTimeout(removeCopyActive, 2000);\r\n\r\n  navigator.clipboard.writeText(textInput.value);\r\n\r\n  switch (textInput.value) {\r\n    case \"\":\r\n      copyActive.textContent = \"Error ! Please Generate Password.\";\r\n      copyActive.style.backgroundColor = \"red\";\r\n      break;\r\n    default:\r\n      copyActive.textContent = \"copied to clipboard!\";\r\n      copyActive.style.backgroundColor = \"#2374ff\";\r\n      break;\r\n  }\r\n});\r\n"],"names":["btnGenerate","document","querySelector","textInput","passLength","getElementById","passLengthValue","value","textContent","oninput","this","upperLetter","Array","from","lowerLetter","symbolChar","numChar","checkboxNum","checkboxSym","checkboxLowLetter","checkboxUpperLetter","copyActive","removeCopyActive","style","cssText","addEventListener","availableChar","checked","length","setTimeout","i","generatePassArray","Uint32Array","self","crypto","getRandomValues","decimal","parseFloat","toString","console","log","generatePass","Math","floor","copyBtn","async","navigator","clipboard","writeText","backgroundColor"],"version":3,"file":"index.f91f70c5.js.map"}